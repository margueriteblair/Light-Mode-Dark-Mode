{"ast":null,"code":"var _jsxFileName = \"/Users/margueriteblair/Documents/CareerDevs11/javascript/101/2020-09/togglelightmode/src/Components/Form.js\";\nimport React from 'react';\nimport Button from './Button';\nimport Input from './Input';\nexport default function Form(props) {\n  const buttonOnclick = () => {\n    props.submitFunc(document.getElementById(props.id));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"form\", {\n    id: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, //nested in { } because its in JS\n  Array.isArray(props.inputs) ? props.inputs.map(inProps =>\n  /*#__PURE__*/\n  //{\n  //return ( //will return an array of inputs\n  React.createElement(Input, {\n    style: {\n      width: 300,\n      height: 50\n    },\n    name: inProps.name,\n    ph: inProps.ph,\n    type: inProps.type,\n    style: inProps.style,\n    id: inProps.id,\n    onChange: inProps.onChange,\n    key: inProps.name //giving each input a unique key, react wants child elements to have its own key\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }) //)\n  //})\n  ) : 'Dev Warning! No Inputs, Check Code'), /*#__PURE__*/React.createElement(Button, {\n    text: 'Submit',\n    onClick: buttonOnclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/margueriteblair/Documents/CareerDevs11/javascript/101/2020-09/togglelightmode/src/Components/Form.js"],"names":["React","Button","Input","Form","props","buttonOnclick","submitFunc","document","getElementById","id","title","Array","isArray","inputs","map","inProps","width","height","name","ph","type","style","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAChC,QAAMC,aAAa,GAAG,MAAM;AACxBD,IAAAA,KAAK,CAACE,UAAN,CAAiBC,QAAQ,CAACC,cAAT,CAAwBJ,KAAK,CAACK,EAA9B,CAAjB;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACM,KADX,CADJ,eAII;AACA,IAAA,EAAE,EAAEN,KAAK,CAACK,EADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGM;AACEE,EAAAA,KAAK,CAACC,OAAN,CAAcR,KAAK,CAACS,MAApB,IACET,KAAK,CAACS,MAAN,CAAaC,GAAb,CAAkBC,OAAO;AAAA;AACvB;AACA;AACI,sBAAC,KAAD;AACA,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE;AAArB,KADP;AAEA,IAAA,IAAI,EAAEF,OAAO,CAACG,IAFd;AAGA,IAAA,EAAE,EAAEH,OAAO,CAACI,EAHZ;AAIA,IAAA,IAAI,EAAEJ,OAAO,CAACK,IAJd;AAKA,IAAA,KAAK,EAAEL,OAAO,CAACM,KALf;AAMA,IAAA,EAAE,EAAEN,OAAO,CAACN,EANZ;AAOA,IAAA,QAAQ,EAAEM,OAAO,CAACO,QAPlB;AAQA,IAAA,GAAG,EAAEP,OAAO,CAACG,IARb,CAQmB;AARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CAaE;AACJ;AAdE,GADF,GAgBG,oCApBX,CAJJ,eA2BI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAE,QADV;AAEI,IAAA,OAAO,EAAEb,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CADJ;AAkCH","sourcesContent":["import React from 'react'\n\nimport Button from './Button'\nimport Input from './Input'\n\nexport default function Form(props) {\n    const buttonOnclick = () => {\n        props.submitFunc(document.getElementById(props.id))\n    }\n\n    return (\n        <div>\n            <h2>\n                {props.title}\n            </h2>  \n            <form\n            id={props.id}\n            >\n                { //nested in { } because its in JS\n                    Array.isArray(props.inputs)\n                    ? props.inputs.map( inProps => \n                        //{\n                        //return ( //will return an array of inputs\n                            <Input\n                            style={{width: 300, height: 50}}\n                            name={inProps.name}\n                            ph={inProps.ph}\n                            type={inProps.type}\n                            style={inProps.style}\n                            id={inProps.id}\n                            onChange={inProps.onChange}\n                            key={inProps.name} //giving each input a unique key, react wants child elements to have its own key\n                            />\n                        //)\n                    //})\n                    ): 'Dev Warning! No Inputs, Check Code'\n                }\n                </form>\n            <Button\n                text={'Submit'}\n                onClick={buttonOnclick}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}