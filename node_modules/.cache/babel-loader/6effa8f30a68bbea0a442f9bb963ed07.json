{"ast":null,"code":"var _jsxFileName = \"/Users/margueriteblair/Documents/CareerDevs11/javascript/101/2020-09/togglelightmode/src/Components/App.js\";\nimport React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\nimport Button from './Button';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  };\n\n  const loginLink = '/login';\n  const regLink = '/register';\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(AppRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"Toggle Theme\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, theme === 'light' ? \"It's light theme, bitch!\" : \"Welcome to the darkside.\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, theme === 'light' ? 'Please choose an option below:' : 'Oh, and welcome to our application:'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homepageBtns\",\n    style: {\n      justifyContent: \"space-evenly\",\n      textAlign: \"center\",\n      flexDirection: \"row\",\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"Login\",\n    onClick: () => {\n      window.location = loginLink;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Register\",\n    onClick: () => {\n      window.location = regLink;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/margueriteblair/Documents/CareerDevs11/javascript/101/2020-09/togglelightmode/src/Components/App.js"],"names":["React","useState","ThemeProvider","lightTheme","darkTheme","GlobalStyles","Button","BrowserRouter","AppRouter","App","theme","setTheme","toggleTheme","loginLink","regLink","justifyContent","textAlign","flexDirection","display","window","location"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA6B,mBAA7B;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,SAApC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,OAAD,CAAlC;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GAND;;AAQA,QAAME,SAAS,GAAG,QAAlB;AACA,QAAMC,OAAO,GAAG,WAAhB;AACA,sBACF,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ,KAAK,KAAK,OAAV,GAAoBP,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,uDACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEQ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,KAAK,OAAV,GAAoB,0BAApB,GAAiD,0BAAtD,CAJR,eAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,KAAK,OAAV,GAAoB,gCAApB,GAAuD,qCAA5D,CALR,eAMQ;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAACK,MAAAA,cAAc,EAAE,cAAjB;AAAiCC,MAAAA,SAAS,EAAE,QAA5C;AAAsDC,MAAAA,aAAa,EAAE,KAArE;AAA4EC,MAAAA,OAAO,EAAE;AAArF,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAG,MAAM;AAACC,MAAAA,MAAM,CAACC,QAAP,GAAkBP,SAAlB;AAA4B,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAG,MAAM;AAACM,MAAAA,MAAM,CAACC,QAAP,GAAkBN,OAAlB;AAA0B,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CANR,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADI,CADJ,CADE;AAmBD;;AAED,eAAeL,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport { ThemeProvider} from 'styled-components'\nimport {lightTheme, darkTheme} from './theme'\nimport { GlobalStyles } from './global'\nimport Button from './Button'\nimport {BrowserRouter} from 'react-router-dom'\nimport AppRouter from './AppRouter'\n\nfunction App() {\n  const [theme, setTheme] = useState('light')\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark')\n    } else {\n      setTheme('light')\n    }\n  }\n\n  const loginLink = '/login';\n  const regLink = '/register';\n  return (\n<BrowserRouter>\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n<>\n    <GlobalStyles />\n    <AppRouter/>\n    <button onClick={toggleTheme}>Toggle Theme</button>\n        <h1>{theme === 'light' ? \"It's light theme, bitch!\" : \"Welcome to the darkside.\"}</h1>\n        <h3>{theme === 'light' ? 'Please choose an option below:' : 'Oh, and welcome to our application:'}</h3>\n        <div className=\"homepageBtns\" style={{justifyContent: \"space-evenly\", textAlign: \"center\", flexDirection: \"row\", display: \"flex\"}}>\n        <Button text='Login' onClick= {() => {window.location = loginLink}}></Button>\n        <Button text=\"Register\" onClick= {() => {window.location = regLink}} ></Button>\n  </div>\n    <footer>\n    </footer>\n</>\n    </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}